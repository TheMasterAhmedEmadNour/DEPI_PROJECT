pipeline {
    agent any
    environment {
        DOCKER_IMAGE = "themasterahmedemadnour/comingsoon-page:$BUILD_NUMBER"
        PROJECT_ID = "x-plateau-436009-s9"
    }

    stages {
        stage('Pull Repository') {
            steps {
                echo 'Pulling the repository'
                sh 'git clone https://github.com/Hellal1997/final-project-DEPI.git'
            }
        }


        stage('Build Docker Image & Push to Docker Hub') {
            steps {
                echo 'Building Docker image and pushing to Docker Hub'
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh '''
                        docker build -t ${USERNAME}/comingsoon-page:${BUILD_NUMBER} .
                        echo "${PASSWORD}" | docker login -u "${USERNAME}" --password-stdin
                        docker push ${USERNAME}/comingsoon-page:${BUILD_NUMBER}
                    '''   
                }
            }
        }

        stage('Deploy to GKE') {
            steps {
                echo 'Deploying to Google Kubernetes Engine'
                script {
                    withCredentials([file(credentialsId: 'gcloud-key-file', variable: 'GCLOUD_KEY')]) {
                        sh """
                        gcloud auth activate-service-account --key-file=${GCLOUD_KEY}
                        gcloud config set project ${PROJECT_ID}
                        export USE_GKE_GCLOUD_AUTH_PLUGIN=True
                        gcloud container clusters get-credentials gke-depi --zone us-central1-c
                        kubectl cluster-info
                        kubectl set image deployment/app-deployment my-app-container="themasterahmedemadnour/comingsoon-page:$BUILD_NUMBER"
                        kubectl rollout status deployment/app-deployment
                        """
                    }
                }
                
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
